{
  "defineProps": {
    "defaultValue": null,
    "name": "defineProps",
    "type": {
      "name": "((options: GetContentOptions) => Record<string, any>)"
    },
    "tags": {
      "resetType": "Function",
      "description": "在表单项内部状态发生改变需要根据这些状态定义相应的prop传给渲染控件的时候调用。"
    }
  },
  "customErrTips": {
    "defaultValue": {
      "value": "false"
    },
    "name": "customErrTips",
    "type": {
      "name": "boolean"
    },
    "tags": {
      "description": "是否自定义错误信息提示，为true后表单项默认不会显示错误信息。将会交给外部处理。"
    }
  },
  "readOnlyText": {
    "defaultValue": {
      "value": "-"
    },
    "name": "readOnlyText",
    "type": {
      "name": "ReactNode"
    },
    "tags": {
      "description": "只读状态下显示的内容"
    }
  },
  "errorStyle": {
    "defaultValue": null,
    "name": "errorStyle",
    "type": {
      "name": "CSSProperties"
    },
    "tags": {
      "description": "错误提示信息样式，支持对象嵌套写法"
    }
  },
  "labelPosition": {
    "defaultValue": {
      "value": "row"
    },
    "name": "labelPosition",
    "type": {
      "name": "\"row\" | \"top\""
    },
    "tags": {
      "description": "标签位置"
    }
  },
  "labelStyle": {
    "defaultValue": null,
    "name": "labelStyle",
    "type": {
      "name": "CSSProperties"
    },
    "tags": {
      "description": "标签样式，支持对象嵌套写法"
    }
  },
  "labelWidth": {
    "defaultValue": null,
    "name": "labelWidth",
    "type": {
      "name": "string | number"
    },
    "tags": {
      "description": "标签宽度"
    }
  },
  "formItemStyle": {
    "defaultValue": null,
    "name": "formItemStyle",
    "type": {
      "name": "CSSProperties"
    },
    "tags": {
      "description": "表单项样式，支持对象嵌套写法"
    }
  },
  "trigger": {
    "defaultValue": {
      "value": "change"
    },
    "name": "trigger",
    "type": {
      "name": "\"change\" | \"blur\" | \"manual\" | (\"change\" | \"blur\" | \"manual\")[]"
    },
    "tags": {
      "description": "触发校验事件"
    }
  },
  "contentStyle": {
    "defaultValue": null,
    "name": "contentStyle",
    "type": {
      "name": "CSSProperties"
    },
    "tags": {
      "description": "表单项内容样式，支持对象嵌套写法"
    }
  },
  "fullWidth": {
    "defaultValue": {
      "value": "false"
    },
    "name": "fullWidth",
    "type": {
      "name": "boolean"
    },
    "tags": {
      "description": "表单项宽度是否撑满整行"
    }
  },
  "contextProps": {
    "defaultValue": null,
    "name": "contextProps",
    "type": {
      "name": "ContextProps"
    },
    "tags": {
      "description": "定义表单项的生命周期，在定制化表单时需要用到这个。"
    }
  },
  "readOnly": {
    "defaultValue": {
      "value": "false"
    },
    "name": "readOnly",
    "type": {
      "name": "boolean"
    },
    "tags": {
      "description": "表单项是否只读，会将这个属性传递给表单项的渲染控件，如果控件支持readOnly属性，则会自动将控件变为主读，如果不支持，需要自定义只读内容。"
    }
  },
  "formatChangeValue": {
    "defaultValue": null,
    "name": "formatChangeValue",
    "type": {
      "name": "((event: Event) => any)"
    },
    "tags": {
      "resetType": "Function",
      "description": "格式化控件的value值, react-form-simple的内部表单项默认取的是标准事件对象里的value ,即e.target.value, 如果你的控件是这个上面做了一层封装返回的不是标准事件对象，需要传入这个方法，react-form-simple的内部表单项将会获取你这个方法的返回值。",
      "descriptionEn": "The value value of the formatted control defaults to the value in the standard event object, i.e. e.target.value. If your control has a layer of encapsulation on top of this, you can pass in this method, and the form item of the react form simple will obtain the return value of your method."
    }
  }
}