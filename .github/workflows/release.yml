name: publish
run-name: run-publish
on:
  # When Release Pull Request is merged   
  pull_request:
    branches:
      - main
      - 'v/**'
    types: [closed]
  
env:
  CI: true

permissions:
  contents: write # to create tags and refs
  actions: write # to cancel running workflow (andymckay/cancel-action)
  issues: write # to create comment
  pull-requests: write # to create comment and so on

jobs: 
  checkCommit:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs: 
      COMMIT_MESSAGE: ${{ steps.commit_information.outputs.COMMIT_MESSAGE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Get Commit Information  
        id: commit_information
        continue-on-error: true
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1)
          FEAT_OR_FIX_LINE=$(echo "$COMMIT_MESSAGE" | grep -iE "feat:|fix:")

          if [ -n "$FEAT_OR_FIX_LINE" ]; then
            echo "COMMIT_MESSAGE=${FEAT_OR_FIX_LINE}" >> $GITHUB_OUTPUT
            echo "${FEAT_OR_FIX_LINE}"
          else
            echo "::set-output name=feat_or_fix_message::No feat or fix message found."
          fi
          

  publish:
    needs: checkCommit
    if: startsWith(needs.checkCommit.outputs.COMMIT_MESSAGE, 'feat') || startsWith(needs.checkCommit.outputs.COMMIT_MESSAGE, 'fix')
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.16.0'

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          echo "${{github.event_name}}"

      - name: Install Dependencies
        run: npm install
      - name: npm run release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set Current Version
        shell: bash -ex {0}
        run: |
          CURRENT_VERSION=$(node -p 'require("./package.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
          
      # Create PR page comment when event is PR
      - name: send pr commonent
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ env.CURRENT_VERSION }} is released ðŸŽ‰'
            })
